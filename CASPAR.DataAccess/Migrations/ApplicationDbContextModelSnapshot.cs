// <auto-generated />
using System;
using CASPAR.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CASPAR.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Building", b =>
                {
                    b.Property<int>("BuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingID"));

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CampusID")
                        .HasColumnType("int");

                    b.HasKey("BuildingID");

                    b.HasIndex("CampusID");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Campus");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Classroom", b =>
                {
                    b.Property<int>("ClassRoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassRoomID"));

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RoomNum")
                        .HasColumnType("int");

                    b.HasKey("ClassRoomID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.ClassroomConfiguration", b =>
                {
                    b.Property<int>("ClassroomConfigID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomConfigID"));

                    b.Property<int>("ClassRoomID")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomDetailID")
                        .HasColumnType("int");

                    b.HasKey("ClassroomConfigID");

                    b.ToTable("ClassroomConfiguration");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.ClassroomDetail", b =>
                {
                    b.Property<int>("ClassroomDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomDetailID"));

                    b.Property<string>("ClassroomDetailDescrip")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClassroomDetails")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassroomDetailID");

                    b.ToTable("ClassroomDetail");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<string>("ProgramPrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.CoursePrereq", b =>
                {
                    b.Property<int>("CoursePrereqID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoursePrereqID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("PrereqNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoursePrereqID");

                    b.ToTable("CoursePrereqs");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.CourseSection", b =>
                {
                    b.Property<int>("CourseSectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseSectionID"));

                    b.Property<int?>("CRN")
                        .HasColumnType("int");

                    b.Property<int?>("ClassRoomID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CourseID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("DayOfWeekID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("FirstDayEnrollment")
                        .HasColumnType("int");

                    b.Property<int?>("MaxEnrollment")
                        .HasColumnType("int");

                    b.Property<int?>("ModalityID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PartOfTerm")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PayModelID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("SectionNotes")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("SemesterScheduleID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ThirdWeekEnrollment")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSlotID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("WNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("WhoPaysID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("CourseSectionID");

                    b.HasIndex("ClassRoomID");

                    b.HasIndex("CourseID");

                    b.HasIndex("DayOfWeekID");

                    b.HasIndex("ModalityID");

                    b.HasIndex("PayModelID");

                    b.HasIndex("SemesterScheduleID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TimeSlotID");

                    b.HasIndex("WNumber");

                    b.HasIndex("WhoPaysID");

                    b.ToTable("CourseSection");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.DayOfTheWeek", b =>
                {
                    b.Property<int>("DayOfTheWeekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayOfTheWeekID"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("DayOfTheWeekID");

                    b.ToTable("DayOfTheWeek");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.InstructorLoad", b =>
                {
                    b.Property<int>("InstructorLoadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorLoadID"));

                    b.Property<int>("Load")
                        .HasColumnType("int");

                    b.Property<int>("SemesterID")
                        .HasColumnType("int");

                    b.Property<string>("WNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("InstructorLoadID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("WNumber");

                    b.ToTable("InstructorLoads");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.InstructorProgram", b =>
                {
                    b.Property<int>("InstructorProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorProgramID"));

                    b.Property<int?>("ProgramID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("WNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorProgramID");

                    b.HasIndex("ProgramID");

                    b.ToTable("InstructorPrograms");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Major");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Modality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModalityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModalityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modality");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.PayModel", b =>
                {
                    b.Property<int>("PayModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayModelID"));

                    b.Property<string>("PayModelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PayModelID");

                    b.ToTable("payModels");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.PreferenceDetails", b =>
                {
                    b.Property<int>("PreferenceDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreferenceDetailsID"));

                    b.Property<int?>("CampusID")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("DayOfWeekID")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModalityID")
                        .HasColumnType("int");

                    b.Property<int>("SemesterID")
                        .HasColumnType("int");

                    b.Property<int?>("TimeOfDayID")
                        .HasColumnType("int");

                    b.Property<string>("WNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PreferenceDetailsID");

                    b.HasIndex("CampusID");

                    b.HasIndex("CourseID");

                    b.HasIndex("DayOfWeekID");

                    b.HasIndex("ModalityID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("TimeOfDayID");

                    b.HasIndex("WNumber");

                    b.ToTable("PreferenceDetails");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PreferenceDetails");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Program", b =>
                {
                    b.Property<int>("ProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramID"));

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramID");

                    b.ToTable("programs");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.ReleaseTime", b =>
                {
                    b.Property<int>("ReleaseTimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReleaseTimeID"));

                    b.Property<int>("ReleaseTimeAmount")
                        .HasColumnType("int");

                    b.Property<string>("ReleaseTimeNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseTimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterID")
                        .HasColumnType("int");

                    b.Property<string>("WNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReleaseTimeID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("WNumber");

                    b.ToTable("ReleaseTimes");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.SemesterSchedule", b =>
                {
                    b.Property<int>("SemesterScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterScheduleID"));

                    b.Property<DateTime>("CloseEnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OpenEnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ScheduleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterID")
                        .HasColumnType("int");

                    b.Property<int>("SemesterTemplateID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("SemesterScheduleID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("SemesterTemplateID");

                    b.HasIndex("StatusID");

                    b.ToTable("SemesterSchedules");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.SemesterTemplate", b =>
                {
                    b.Property<int>("SemesterTemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterTemplateID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("CourseQuantity")
                        .HasColumnType("int");

                    b.Property<int>("TemplateID")
                        .HasColumnType("int");

                    b.HasKey("SemesterTemplateID");

                    b.HasIndex("CourseID");

                    b.HasIndex("TemplateID");

                    b.ToTable("SemesterTemplates");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("statuses");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Template", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateID"));

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketID"));

                    b.Property<string>("TicketDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TicketID");

                    b.HasIndex("WNumber");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.TimeOfDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeOfDays");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlotID"));

                    b.Property<string>("TimeSlotDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeSlotType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TimeSlotID");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.WhoPays", b =>
                {
                    b.Property<int>("WhoPaysID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WhoPaysID"));

                    b.Property<string>("WhoPaysType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WhoPaysID");

                    b.ToTable("WhoPays");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.InstructorPreferences", b =>
                {
                    b.HasBaseType("CASPAR.ApplicationCore.Models.PreferenceDetails");

                    b.Property<int>("PreferencesRank")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("InstructorPreferences");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.StudentPreferences", b =>
                {
                    b.HasBaseType("CASPAR.ApplicationCore.Models.PreferenceDetails");

                    b.HasDiscriminator().HasValue("StudentPreferences");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("WNumber")
                        .IsUnique()
                        .HasFilter("[WNumber] IS NOT NULL");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Instructor", b =>
                {
                    b.HasBaseType("CASPAR.ApplicationCore.Models.ApplicationUser");

                    b.Property<string>("InstructorNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorType")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Instructor");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Student", b =>
                {
                    b.HasBaseType("CASPAR.ApplicationCore.Models.ApplicationUser");

                    b.Property<string>("ClassStanding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GraduationYear")
                        .HasColumnType("int");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.HasIndex("MajorId");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Building", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Classroom", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.CourseSection", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassRoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.DayOfTheWeek", "DayOfTheWeek")
                        .WithMany()
                        .HasForeignKey("DayOfWeekID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Modality", "Modality")
                        .WithMany()
                        .HasForeignKey("ModalityID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.PayModel", "PayModel")
                        .WithMany()
                        .HasForeignKey("PayModelID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.SemesterSchedule", "SemesterSchedule")
                        .WithMany()
                        .HasForeignKey("SemesterScheduleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("WNumber")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CASPAR.ApplicationCore.Models.WhoPays", "WhoPays")
                        .WithMany()
                        .HasForeignKey("WhoPaysID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Course");

                    b.Navigation("DayOfTheWeek");

                    b.Navigation("Instructor");

                    b.Navigation("Modality");

                    b.Navigation("PayModel");

                    b.Navigation("SemesterSchedule");

                    b.Navigation("Status");

                    b.Navigation("TimeSlot");

                    b.Navigation("WhoPays");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.InstructorLoad", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("WNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.InstructorProgram", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.PreferenceDetails", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Campus", "Campus")
                        .WithMany()
                        .HasForeignKey("CampusID");

                    b.HasOne("CASPAR.ApplicationCore.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.DayOfTheWeek", "DayOfWeek")
                        .WithMany()
                        .HasForeignKey("DayOfWeekID");

                    b.HasOne("CASPAR.ApplicationCore.Models.Modality", "Modality")
                        .WithMany()
                        .HasForeignKey("ModalityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.TimeOfDay", "TimeOfDay")
                        .WithMany()
                        .HasForeignKey("TimeOfDayID");

                    b.HasOne("CASPAR.ApplicationCore.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("WNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Campus");

                    b.Navigation("Course");

                    b.Navigation("DayOfWeek");

                    b.Navigation("Modality");

                    b.Navigation("Semester");

                    b.Navigation("TimeOfDay");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.ReleaseTime", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("WNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.SemesterSchedule", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.SemesterTemplate", "SemesterTemplate")
                        .WithMany()
                        .HasForeignKey("SemesterTemplateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("SemesterTemplate");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.SemesterTemplate", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CASPAR.ApplicationCore.Models.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Ticket", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("WNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CASPAR.ApplicationCore.Models.Student", b =>
                {
                    b.HasOne("CASPAR.ApplicationCore.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");
                });
#pragma warning restore 612, 618
        }
    }
}
